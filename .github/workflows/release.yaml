name: Build and Release

on:
  push:
    tags:
      - "v*"
      - "v*-beta*"
      - "v*-alpha*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Falls du eine andere .NET-Version nutzt, ändere dies

      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore Source/Porticle.CLDR.Generator.sln

      - name: Build project
        run: dotnet build Source/Porticle.CLDR.Generator.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test Source/Porticle.CLDR.Units.Tests/Porticle.CLDR.Units.Tests.csproj --configuration Release --no-build --verbosity normal

      - name: Publish application
        run: dotnet publish Source/Porticle.CLDR.Units/Porticle.CLDR.Units.csproj --configuration Release --output ./publish

      - name: Create ZIP archive
        run: zip -r Porticle.CLDR-${{ env.VERSION }}.zip ./publish

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: "Automatisch erstelltes Release für Porticle.CLDR v${{ env.VERSION }}."
          files: Porticle.CLDR-${{ env.VERSION }}.zip
          draft: false
          prerelease: ${{ contains(env.VERSION, '-beta') || contains(env.VERSION, '-alpha') || contains(env.VERSION, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}